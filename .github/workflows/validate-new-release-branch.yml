name: Validate Release Branch Contains Previous

on:
  create:
    branches:
      - release/**

jobs:
  check-release-history:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout all refs
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine current and previous release branches
        id: branch-info
        run: |
          CURRENT="${GITHUB_REF#refs/heads/}"
          echo "Current release branch: $CURRENT"

          PREVIOUS=$(git branch -r --sort=-creatordate | grep 'origin/release/' | grep -v "origin/$CURRENT" | head -n 1 | sed 's|origin/||')
          PREVIOUS="$(echo "$PREVIOUS" | xargs)"
          echo "Previous release branch: $PREVIOUS"

          echo "current=$CURRENT" >> $GITHUB_OUTPUT
          echo "previous=$PREVIOUS" >> $GITHUB_OUTPUT

      - name: Validate current release contains previous
        id: validate
        if: steps.branch-info.outputs.previous != ''
        run: |
          git fetch origin
          MISSING=$(git cherry "origin/${{ steps.branch-info.outputs.current }}" "origin/${{ steps.branch-info.outputs.previous }}" | grep '^+' || true)

          if [ -n "$MISSING" ]; then
            echo "::error::'${{ steps.branch-info.outputs.current }}' does NOT contain all commits from '${{ steps.branch-info.outputs.previous }}'."
            echo "$MISSING"
            echo "delete_branch=true" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "âœ… '${{ steps.branch-info.outputs.current }}' includes all commits from '${{ steps.branch-info.outputs.previous }}'."
            echo "delete_branch=false" >> $GITHUB_OUTPUT
          fi

      - name: Delete invalid release branch
        if: failure()
        run: |
          BRANCH="${{ steps.branch-info.outputs.current }}"
          echo "Deleting invalid release branch: $BRANCH"
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git push origin --delete "$BRANCH"
